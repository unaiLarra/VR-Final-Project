[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://b8d8xkcl2qioi"]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_quvvb"]
default_input_values = [0, 0, 1, 0, 2, 1]
op_type = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_nmtvk"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_y88fj"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_o0s4i"]
parameter_name = "Star_Texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_nufe4"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_d5sfa"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hj22y"]
input_name = "view_index"

[sub_resource type="VisualShaderNodeIntParameter" id="VisualShaderNodeIntParameter_d6cv1"]
parameter_name = "ViewIndex"

[sub_resource type="VisualShaderNodeIntOp" id="VisualShaderNodeIntOp_x0lsq"]
operator = 1

[sub_resource type="VisualShaderNodeIntFunc" id="VisualShaderNodeIntFunc_n2jig"]
function = 0

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_cjyq7"]
billboard_type = 3
keep_scale = true

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform int ViewIndex;
uniform sampler2D Star_Texture;



void vertex() {
	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __wm = mat4(normalize(INV_VIEW_MATRIX[0]), normalize(INV_VIEW_MATRIX[1]), normalize(INV_VIEW_MATRIX[2]), MODEL_MATRIX[3]);
		__wm = __wm * mat4(vec4(cos(INSTANCE_CUSTOM.x), -sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		__wm = __wm * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = VIEW_MATRIX * __wm;
	}


// Output:0
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p4 = n_out2p0.a;


// IntParameter:7
	int n_out7p0 = ViewIndex;


// Input:6
	int n_out6p0 = VIEW_INDEX;


// IntOp:8
	int n_out8p0 = n_out7p0 - n_out6p0;


// IntFunc:9
	int n_out9p0 = abs(n_out8p0);


// Clamp:10
	int n_in10p1 = 0;
	int n_in10p2 = 1;
	int n_out10p0 = clamp(n_out9p0, n_in10p1, n_in10p2);


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(Star_Texture, UV);
	float n_out4p1 = n_out4p0.r;


// FloatOp:5
	float n_out5p0 = n_out4p1 * n_out2p4;


// FloatOp:11
	float n_out11p0 = float(n_out10p0) * n_out5p0;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out11p0;


}
"
modes/cull = 2
flags/unshaded = true
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_cjyq7")
nodes/vertex/2/position = Vector2(40, 500)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10)
nodes/fragment/0/position = Vector2(800, 80)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_y88fj")
nodes/fragment/2/position = Vector2(-260, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_o0s4i")
nodes/fragment/3/position = Vector2(-580, 420)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_nufe4")
nodes/fragment/4/position = Vector2(-200, 420)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatOp_d5sfa")
nodes/fragment/5/position = Vector2(160, 440)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_hj22y")
nodes/fragment/6/position = Vector2(-540, 840)
nodes/fragment/7/node = SubResource("VisualShaderNodeIntParameter_d6cv1")
nodes/fragment/7/position = Vector2(-540, 960)
nodes/fragment/8/node = SubResource("VisualShaderNodeIntOp_x0lsq")
nodes/fragment/8/position = Vector2(-180, 840)
nodes/fragment/9/node = SubResource("VisualShaderNodeIntFunc_n2jig")
nodes/fragment/9/position = Vector2(40, 860)
nodes/fragment/10/node = SubResource("VisualShaderNodeClamp_quvvb")
nodes/fragment/10/position = Vector2(240, 800)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatOp_nmtvk")
nodes/fragment/11/position = Vector2(460, 460)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 4, 2, 4, 1, 5, 0, 2, 4, 5, 1, 6, 0, 8, 1, 7, 0, 8, 0, 8, 0, 9, 0, 9, 0, 10, 0, 10, 0, 11, 0, 5, 0, 11, 1, 11, 0, 0, 1)
